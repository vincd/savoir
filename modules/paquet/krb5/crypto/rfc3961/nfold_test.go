package rfc3961

import (
	"bytes"
	"testing"
)

// https://datatracker.ietf.org/doc/html/RFC3961#appendix-A.1
func TestNFold(t *testing.T) {

	var cases = []struct {
		nb int
		ba []byte
		va []byte
	}{
		{64 / 8, []byte("012345"), []byte{0xbe, 0x07, 0x26, 0x31, 0x27, 0x6b, 0x19, 0x55}},
		{56 / 8, []byte("password"), []byte{0x78, 0xa0, 0x7b, 0x6c, 0xaf, 0x85, 0xfa}},
		{64 / 8, []byte("Rough Consensus, and Running Code"), []byte{0xbb, 0x6e, 0xd3, 0x08, 0x70, 0xb7, 0xf0, 0xe0}},
		{168 / 8, []byte("password"), []byte{0x59, 0xe4, 0xa8, 0xca, 0x7c, 0x03, 0x85, 0xc3, 0xc3, 0x7b, 0x3f, 0x6d, 0x20, 0x00, 0x24, 0x7c, 0xb6, 0xe6, 0xbd, 0x5b, 0x3e}},
		{192 / 8, []byte("MASSACHVSETTS INSTITVTE OF TECHNOLOGY"), []byte{0xdb, 0x3b, 0x0d, 0x8f, 0x0b, 0x06, 0x1e, 0x60, 0x32, 0x82, 0xb3, 0x08, 0xa5, 0x08, 0x41, 0x22, 0x9a, 0xd7, 0x98, 0xfa, 0xb9, 0x54, 0x0c, 0x1b}},
		{168 / 8, []byte("Q"), []byte{0x51, 0x8a, 0x54, 0xa2, 0x15, 0xa8, 0x45, 0x2a, 0x51, 0x8a, 0x54, 0xa2, 0x15, 0xa8, 0x45, 0x2a, 0x51, 0x8a, 0x54, 0xa2, 0x15}},
		{168 / 8, []byte("ba"), []byte{0xfb, 0x25, 0xd5, 0x31, 0xae, 0x89, 0x74, 0x49, 0x9f, 0x52, 0xfd, 0x92, 0xea, 0x98, 0x57, 0xc4, 0xba, 0x24, 0xcf, 0x29, 0x7e}},
		{64 / 8, []byte("kerberos"), []byte{0x6b, 0x65, 0x72, 0x62, 0x65, 0x72, 0x6f, 0x73}},
		{128 / 8, []byte("kerberos"), []byte{0x6b, 0x65, 0x72, 0x62, 0x65, 0x72, 0x6f, 0x73, 0x7b, 0x9b, 0x5b, 0x2b, 0x93, 0x13, 0x2b, 0x93}},
		{168 / 8, []byte("kerberos"), []byte{0x83, 0x72, 0xc2, 0x36, 0x34, 0x4e, 0x5f, 0x15, 0x50, 0xcd, 0x07, 0x47, 0xe1, 0x5d, 0x62, 0xca, 0x7a, 0x5a, 0x3b, 0xce, 0xa4}},
		{256 / 8, []byte("kerberos"), []byte{0x6b, 0x65, 0x72, 0x62, 0x65, 0x72, 0x6f, 0x73, 0x7b, 0x9b, 0x5b, 0x2b, 0x93, 0x13, 0x2b, 0x93, 0x5c, 0x9b, 0xdc, 0xda, 0xd9, 0x5c, 0x98, 0x99, 0xc4, 0xca, 0xe4, 0xde, 0xe6, 0xd6, 0xca, 0xe4}},
	}

	for _, c := range cases {
		if bytes.Compare(Nfold(c.ba, c.nb), c.va) != 0 {
			t.Errorf("Nfold(\"%s\", %d) == %x != %x", c.ba, c.nb, Nfold(c.ba, c.nb), c.va)
		}
	}
}
